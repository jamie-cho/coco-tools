procedure ecb_locate
    param x, y:integer

    dim tmp_buffer(3):byte
    tmp_buffer(1) = $02
    tmp_buffer(2) = $20 + x
    tmp_buffer(3) = $20 + y
    put #1, tmp_buffer


procedure ecb_at
    param location:integer
    run ecb_locate(land(location, 31), mod(location, 32))


procedure ecb_text_address
    param address:integer
    type rregisters=cc,a,b,dp:byte; x,y,u:integer
    dim rregs:rregisters
    dim reqid:byte

    (* getstat ss.alfas *)
    rregs.a = 1
    rregs.b = $1c
    reqid = $8d
    run syscall(reqid,rregs)
    if land(rregs.cc, 1) <> 0 then
        address = -1
    else
        address = rregs.x
    endif


procedure ecb_cls
    param color:integer
    dim a,b,ii:integer
    dim c:byte
    if color=1 or color>8 then 
        c=$0c
        put #1,c
        if color>8 then
            print("MICROSOFT")
        endif
    else 
        c=$01
        put #1,c
        run ecb_text_address(a)
        if a<>-1 then 
            b=a+511
            c=143+land(7,color-1)*16
            for ii=a to b
                poke ii,c
            next ii
        endif 
    endif


procedure ecb_sound
    param f, d, v:integer
    if f < 0 or f > 255 or d < 0 or d > 255 or v < 0 or v > 63 then
        error 52
    endif
    f = 1.0 / (-2.24219E-05 * f + 0.005961832)
    run gfx2("tone", f, d, v)

    
procedure foo
    run ecb_cls(5)
    run ecb_sound(5, 200, 10)
    run ecb_sound(50, 100, 20)
    run ecb_sound(255, 50, 63)

